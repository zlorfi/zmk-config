/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>


&mt {
  // flavor = "tap-preferred";
  // tapping_term_ms = <200>;
};

/ {
  combos {
    compatible = "zmk,combos";
    combo_esc {
      timeout-ms = <50>;
      key-positions = <0 1>;
      bindings = <&kp ESC>;
    };

    combo_tab {
      timeout-ms = <50>;
      key-positions = <10 11>;
      bindings = <&kp TAB>;
    };

    combo_ralt {
      timeout-ms = <50>;
      key-positions = <17 16>;
      bindings = <&kp RALT>;
    };

    combo_lalt {
      timeout-ms = <50>;
      key-positions = <11 12>;
      bindings = <&kp LALT>;
    };

    combo_lgui {
      timeout-ms = <50>;
      key-positions = <12 13>;
      bindings = <&kp LGUI>;
    };

    combo_rgui {
      timeout-ms = <50>;
      key-positions = <17 18>;
      bindings = <&kp RGUI>;
    };
  };

  keymap {
    compatible = "zmk,keymap";

    default_layer {
      // ___________________________________________________           ___________________________________________________
      // |    Q    |    W    |    F    |    P    |    B    |           |    J    |    L    |    U    |    Y    |    ;    |
      // |    A    |    R    |    S    |    T    |    G    |           |    M    |    N    |    E    |    I    |    O    |
      // |    Z    |    X    |    C    |    D    |    V    |           |    K    |    H    |    ,    |    .    |    /    |
      // ------------------------------| LAYER1  |  ENTER  |           |   RGUI  |  LAYER2 |------------------------------
      bindings = <
        &kp Q      &kp W      &kp F       &kp P       &kp B             &kp J      &kp L      &kp U      &kp Y      &kp SEMICOLON
        &kp A      &kp R      &kp S       &kp T       &kp G             &kp M      &kp N      &kp E      &kp I      &kp O
        &kp Z      &kp X      &kp C       &kp D       &kp V             &kp K      &kp H      &kp COMMA  &kp DOT    &kp SLASH
                                          &lt 1 BSPC  &mt LSHFT ENTER   &mt RSHFT RGUI  &lt 2 SPACE
      >;
		};

    left_layer {
      // ___________________________________________________           ___________________________________________________
      // |    !    |    @    |    #    |    $    |    %    |           |    ^    |    &    |    '    |    `    |         |
      // |    ~    |    +    |    (    |    )    |  COPY   |           |    |    |    -    |    =    |    _    |    *    |
      // |         | EXTRACT |    {    |    }    |  PASTE  |           |         |    [    |    ]    |         |    \    |
      // ------------------------------|  TRANS  |  TRANS  |           |         |         |------------------------------
      bindings = <
        &kp EXCL   &kp AT     &kp HASH    &kp DOLLAR  &kp PERCENT       &kp CARET  &kp AMPS   &kp APOS   &kp GRAVE  &none
        &kp TILDE  &kp PLUS   &kp LPAR    &kp RPAR    &kp LG(C)         &kp PIPE   &kp MINUS  &kp EQUAL  &kp UNDER  &kp STAR
        &none      &kp LG(X)  &kp LBRC    &kp RBRC    &kp LG(V)         &none      &kp LBKT   &kp RBKT   &none      &kp BSLH
                                          &trans      &trans            &none      &none
      >;
		};

		right_layer {
      // ___________________________________________________           ___________________________________________________
      // |         |    1    |    2    |    3    |         |           |         |         |   UP    |         |  VOL +  |
      // |    0    |    4    |    5    |    6    |         |           |         |  LEFT   |  DOWN   |  RIGHT  |  VOL -  |
      // |         |    7    |    8    |    9    |         |           |         |         |         |  TRANS  |  MUTE   |
      // ------------------------------|         |  BSPC   |           |         |  TRANS  |------------------------------
      bindings = <
        &none      &kp KP_N1  &kp KP_N2   &kp KP_N3   &none             &none      &none      &kp UP     &none      &kp C_VOL_UP
        &kp KP_N0  &kp KP_N4  &kp KP_N5   &kp KP_N6   &none             &none      &kp LEFT   &kp DOWN   &kp RIGHT  &kp C_VOL_DN
        &none      &kp KP_N7  &kp KP_N8   &kp KP_N9   &none             &none      &none      &none      &trans     &kp C_MUTE
                                          &none       &kp BSPC          &none      &trans
      >;
		};

		tri_layer {
      bindings = <
        &kp NUM_1  &kp NUM_2  &kp NUM_3   &kp NUM_4   &kp NUM_5 			  &trans     &trans     &trans     &trans     &trans
        &kp F1     &kp F2     &kp F3      &kp F4      &kp F5  					&trans     &kp PG_UP  &kp K_VOL_UP &kp K_MUTE &trans
        &bt BT_CLR &bt BT_NXT &bt BT_PRV  &kp F6      &kp F7   				  &trans     &kp PG_DN  &kp K_VOL_DN &trans   &trans
                                          &trans      &trans  					&trans     &trans
      >;
		};

	};
};
